using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

using Newlife.Database.Builder.Models.{Module_Name};

namespace Newlife.Database.Builder.Mappings
{
	 /// <summary>
    /// {Mapping_Name}Mapping类
    /// </summary>
    public class {Mapping_Name}Mapping : EntityTypeConfiguration<{Mapping_Name}>
    {
        public {Mapping_Name}Mapping(string schema = "{Schema_Name}")
        {
            this.ToTable(schema + ".{Mapping_Name}");

            <If_PrimaryKeys_None><ElseIf_PrimaryKeys_One>this.HasKey(p => p.{Primary_Key_Name});<ElseIf_PrimaryKeys_More>this.HasKey(p => new {<Foreach_PrimaryKeys>p.{Primary_Key_Name}<separator>,</separator></Foreach_PrimaryKeys>});</EndIf>

			<Mapping_Columns>
			this.property(p=>p.{Column_Name}).HasColumnName("{Column_Name}")<If_HasColumnType>.HasColumnType("{Column_DataType}")</EndIf><If_IsRequired>.IsRequired()</EndIf><If_IsOptional>.IsOptional()</EndIf><If_IsUnicode>.IsUnicode({Is_DoubleBytes})</EndIf><If_HasPrecision>.HasPrecision({First_LimitLength},{Second_LimitLength})</EndIf><If_HasMaxLength>.HasMaxLength({Limit_Length})</EndIf><If_OnePrimaryKey>.HasDatabaseGeneratedOption(DatabaseGeneratedOption.None)</EndIf>
			</Mapping_Columns>
        }
    }
}